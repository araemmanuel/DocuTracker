version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
      
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      DB_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - ./pgadmin/servers.json.template:/pgadmin4/servers.json.template
      - ./pgadmin/generate_servers.sh:/docker-entrypoint-initdb.d/generate_servers.sh
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - DJANGO_SETTINGS_MODULE=theproject.settings

  frontend:
    build: ./frontend
    command: npm run dev
    env_file:
      - ./.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
  pgadmin-data: